server:
  port: 8080


# nohup java -jar -Dspring.profiles.active=prod myworkspace-0.0.1-SNAPSHOT.jar > myworkspace.log &

spring:
  profiles:    active: default
  servlet:
  #multipart 파일처리 조건
    multipart:      max-file-size: -1      max-request-size: -1
  #database 접속 정보
  datasource:
         #jdbc:mysql://엔드포인트/데이터베이스?옵션...    url: jdbc:mysql://mysql-1.chrdgebq2co5.ap-northeast-2.rds.amazonaws.com/myworkspace?useUnicode=true&characterEncoding=utf-8
    username: admin
    password: password123!
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:    show-sql: true # 데이터처리할 대 SQL문을 보여줌
    generate-ddl: true # 클래스 정의에 따른 테이블 및 데이터베이스 객체 생성
    properties: # 서버프로그램 설정 시작
      hibernate:
        '[generate_statistics]': true # 통계정보
        '[order_inserts]': true
        '[order_updates]': true
        jdbc: 
          '[batch_size]': 5     # 서버프로그램 설정 jpa 종료 
eureka:
  client:
    serviceUrl:
      defaultZone: http://192.168.0.48:8761/eureka/
  instance:
    hostname: 192.168.0.35
    
   # nohup java -jar -Dspring.profiles.active=prod khk-0.0.1-SNAPSHOT.jar > khk.log &
---
spring:
  profiles: prod
eureka:
  client:
    serviceUrl:
    # 유레카의 ec2 주소
      defaultZone: http://52.78.12.251:8761/eureka/
      # http://ec2-13-125-245-153.ap-northeast-2.compute.amazonaws.com:8761/eureka/
  instance:
    # 본인 서비스의 ec2 주소
    hostname: 13.125.245.153
     # ec2-13-125-245-153.ap-northeast-2.compute.amazonaws.com
              
  redis:
    host: 127.0.0.1
    port: 6379

# 추가적인 속성
api:
  base-path: http://localhost:8080

#prod 프로필
---
spring:
  profiles: prod
  redis:
    host: 52.78.88.201
    port: 6379
    password: foobared  
  
api:
  base-path: http://ec2-15-164-212-136.ap-northeast-2.compute.amazonaws.com:8080